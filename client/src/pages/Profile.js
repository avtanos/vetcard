import React, { useState, useEffect } from 'react';
import { useAuth } from '../context/AuthContext';
import { useLanguage } from '../context/LanguageContext';
import LoadingSpinner from '../components/LoadingSpinner';
import './Profile.css';

const Profile = () => {
  const { user, token } = useAuth();
  const { t } = useLanguage();
  const [loading, setLoading] = useState(false);
  const [profileData, setProfileData] = useState({
    first_name: '',
    last_name: '',
    email: '',
    phone: '',
    username: '',
    city: '',
    address: '',
    birth_date: '',
    avatar: null
  });
  const [isEditing, setIsEditing] = useState(false);
  const [passwordData, setPasswordData] = useState({
    current_password: '',
    new_password: '',
    confirm_password: ''
  });

  useEffect(() => {
    if (user) {
      setProfileData({
        first_name: user.first_name || '',
        last_name: user.last_name || '',
        email: user.email || '',
        phone: user.phone || '',
        username: user.username || '',
        city: user.city || '',
        address: user.address || '',
        birth_date: user.birth_date || '',
        avatar: user.avatar || null
      });
    }
  }, [user]);

  const handleProfileChange = (e) => {
    const { name, value } = e.target;
    setProfileData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handlePasswordChange = (e) => {
    const { name, value } = e.target;
    setPasswordData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleAvatarChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setProfileData(prev => ({
        ...prev,
        avatar: file
      }));
    }
  };

  const handleProfileSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç API –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
      console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è:', profileData);
      
      // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      setTimeout(() => {
        setIsEditing(false);
        setLoading(false);
        alert('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      }, 1000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', error);
      setLoading(false);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è');
    }
  };

  const handlePasswordSubmit = async (e) => {
    e.preventDefault();
    
    if (passwordData.new_password !== passwordData.confirm_password) {
      alert('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      return;
    }
    
    setLoading(true);
    
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç API –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
      console.log('–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è:', passwordData);
      
      // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
      setTimeout(() => {
        setPasswordData({
          current_password: '',
          new_password: '',
          confirm_password: ''
        });
        setLoading(false);
        alert('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!');
      }, 1000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è:', error);
      setLoading(false);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è');
    }
  };

  if (!user) {
    return (
      <div className="profile-container">
        <div className="not-authenticated">
          <h2>–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
          <p>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</p>
        </div>
      </div>
    );
  }

  return (
    <div className="profile-container">
      <div className="profile-header">
        <h1>{t('profile')}</h1>
        <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞</p>
      </div>

      <div className="profile-content">
        <div className="profile-section">
          <div className="section-header">
            <h2>–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>
            <button 
              className="edit-btn"
              onClick={() => setIsEditing(!isEditing)}
            >
              {isEditing ? '‚ùå –û—Ç–º–µ–Ω–∞' : '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'}
            </button>
          </div>

          <form onSubmit={handleProfileSubmit} className="profile-form">
            <div className="avatar-section">
              <div className="avatar-container">
                <div className="avatar">
                  {profileData.avatar ? (
                    <img src={URL.createObjectURL(profileData.avatar)} alt="Avatar" />
                  ) : (
                    <span className="avatar-placeholder">
                      {user.first_name ? user.first_name[0].toUpperCase() : 'U'}
                    </span>
                  )}
                </div>
                {isEditing && (
                  <input
                    type="file"
                    accept="image/*"
                    onChange={handleAvatarChange}
                    className="avatar-input"
                    id="avatar-input"
                  />
                )}
                {isEditing && (
                  <label htmlFor="avatar-input" className="avatar-label">
                    üì∑ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ
                  </label>
                )}
              </div>
            </div>

            <div className="form-grid">
              <div className="form-group">
                <label htmlFor="first_name">–ò–º—è *</label>
                <input
                  type="text"
                  id="first_name"
                  name="first_name"
                  value={profileData.first_name}
                  onChange={handleProfileChange}
                  disabled={!isEditing}
                  required
                />
              </div>

              <div className="form-group">
                <label htmlFor="last_name">–§–∞–º–∏–ª–∏—è *</label>
                <input
                  type="text"
                  id="last_name"
                  name="last_name"
                  value={profileData.last_name}
                  onChange={handleProfileChange}
                  disabled={!isEditing}
                  required
                />
              </div>

              <div className="form-group">
                <label htmlFor="email">Email *</label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={profileData.email}
                  onChange={handleProfileChange}
                  disabled={!isEditing}
                  required
                />
              </div>

              <div className="form-group">
                <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  value={profileData.phone}
                  onChange={handleProfileChange}
                  disabled={!isEditing}
                />
              </div>

              <div className="form-group">
                <label htmlFor="username">–õ–æ–≥–∏–Ω *</label>
                <input
                  type="text"
                  id="username"
                  name="username"
                  value={profileData.username}
                  onChange={handleProfileChange}
                  disabled={!isEditing}
                  required
                />
              </div>

              <div className="form-group">
                <label htmlFor="birth_date">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</label>
                <input
                  type="date"
                  id="birth_date"
                  name="birth_date"
                  value={profileData.birth_date}
                  onChange={handleProfileChange}
                  disabled={!isEditing}
                />
              </div>

              <div className="form-group">
                <label htmlFor="city">–ì–æ—Ä–æ–¥</label>
                <input
                  type="text"
                  id="city"
                  name="city"
                  value={profileData.city}
                  onChange={handleProfileChange}
                  disabled={!isEditing}
                />
              </div>

              <div className="form-group full-width">
                <label htmlFor="address">–ê–¥—Ä–µ—Å</label>
                <textarea
                  id="address"
                  name="address"
                  value={profileData.address}
                  onChange={handleProfileChange}
                  disabled={!isEditing}
                  rows="3"
                />
              </div>
            </div>

            {isEditing && (
              <div className="form-actions">
                <button type="submit" className="save-btn" disabled={loading}>
                  {loading ? (
                    <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>
                      <div style={{
                        width: '16px',
                        height: '16px',
                        border: '2px solid rgba(255,255,255,0.3)',
                        borderTop: '2px solid white',
                        borderRadius: '50%',
                        animation: 'spin 1s linear infinite'
                      }}></div>
                      –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
                    </div>
                  ) : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è'}
                </button>
              </div>
            )}
          </form>
        </div>

        <div className="profile-section">
          <div className="section-header">
            <h2>–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</h2>
          </div>

          <form onSubmit={handlePasswordSubmit} className="password-form">
            <div className="form-group">
              <label htmlFor="current_password">–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å *</label>
              <input
                type="password"
                id="current_password"
                name="current_password"
                value={passwordData.current_password}
                onChange={handlePasswordChange}
                required
              />
            </div>

            <div className="form-group">
              <label htmlFor="new_password">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å *</label>
              <input
                type="password"
                id="new_password"
                name="new_password"
                value={passwordData.new_password}
                onChange={handlePasswordChange}
                required
                minLength="8"
              />
            </div>

            <div className="form-group">
              <label htmlFor="confirm_password">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å *</label>
              <input
                type="password"
                id="confirm_password"
                name="confirm_password"
                value={passwordData.confirm_password}
                onChange={handlePasswordChange}
                required
                minLength="8"
              />
            </div>

            <div className="form-actions">
              <button type="submit" className="change-password-btn" disabled={loading}>
                {loading ? (
                  <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>
                    <div style={{
                      width: '16px',
                      height: '16px',
                      border: '2px solid rgba(255,255,255,0.3)',
                      borderTop: '2px solid white',
                      borderRadius: '50%',
                      animation: 'spin 1s linear infinite'
                    }}></div>
                    –ò–∑–º–µ–Ω–µ–Ω–∏–µ...
                  </div>
                ) : 'üîí –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å'}
              </button>
            </div>
          </form>
        </div>

        <div className="profile-section">
          <div className="section-header">
            <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞</h2>
          </div>

          <div className="account-settings">
            <div className="setting-item">
              <div className="setting-info">
                <h3>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                <p>–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è—Ö –∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö</p>
              </div>
              <label className="toggle-switch">
                <input type="checkbox" defaultChecked />
                <span className="toggle-slider"></span>
              </label>
            </div>

            <div className="setting-item">
              <div className="setting-info">
                <h3>Email —Ä–∞—Å—Å—ã–ª–∫–∞</h3>
                <p>–ü–æ–ª—É—á–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ —Å–æ–≤–µ—Ç—ã –Ω–∞ email</p>
              </div>
              <label className="toggle-switch">
                <input type="checkbox" defaultChecked />
                <span className="toggle-slider"></span>
              </label>
            </div>

            <div className="setting-item">
              <div className="setting-info">
                <h3>–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</h3>
                <p>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∞–∫–∫–∞—É–Ω—Ç–∞</p>
              </div>
              <label className="toggle-switch">
                <input type="checkbox" />
                <span className="toggle-slider"></span>
              </label>
            </div>
          </div>
        </div>

        <div className="profile-section">
          <div className="section-header">
            <h2>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞</h2>
          </div>

          <div className="account-stats">
            <div className="stat-card">
              <span className="stat-icon">üêæ</span>
              <span className="stat-number">3</span>
              <span className="stat-label">–ü–∏—Ç–æ–º—Ü–µ–≤</span>
            </div>
            <div className="stat-card">
              <span className="stat-icon">üìÖ</span>
              <span className="stat-number">12</span>
              <span className="stat-label">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π</span>
            </div>
            <div className="stat-card">
              <span className="stat-icon">üè•</span>
              <span className="stat-number">8</span>
              <span className="stat-label">–ó–∞–ø–∏—Å–µ–π –∫ –≤—Ä–∞—á—É</span>
            </div>
            <div className="stat-card">
              <span className="stat-icon">‚≠ê</span>
              <span className="stat-number">156</span>
              <span className="stat-label">–î–Ω–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Profile; 