import React, { useState, useEffect } from 'react';
import { useLanguage } from '../context/LanguageContext';
import LoadingSpinner from '../components/LoadingSpinner';
import './Articles.css';

const Articles = () => {
  const { t } = useLanguage();
  const [articles, setArticles] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchQuery, setSearchQuery] = useState('');

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–µ–π
  const mockArticles = [
    {
      id: 1,
      title: '–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Ö–∞–∂–∏–≤–∞—Ç—å –∑–∞ —â–µ–Ω–∫–æ–º',
      category: 'care',
      author: '–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤',
      date: '2024-02-10',
      readTime: '5 –º–∏–Ω',
      image: 'üêï',
      excerpt: '–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —É—Ö–æ–¥–∞ –∑–∞ —â–µ–Ω–∫–æ–º –≤ –ø–µ—Ä–≤—ã–µ –º–µ—Å—è—Ü—ã –∂–∏–∑–Ω–∏. –ü–∏—Ç–∞–Ω–∏–µ, –≥–∏–≥–∏–µ–Ω–∞, –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ.',
      tags: ['—â–µ–Ω–æ–∫', '—É—Ö–æ–¥', '–≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ'],
      views: 1247,
      likes: 89
    },
    {
      id: 2,
      title: '–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –¥–æ–º–∞—à–Ω–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ',
      category: 'health',
      author: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä –ü–µ—Ç—Ä–æ–≤–∞',
      date: '2024-02-08',
      readTime: '8 –º–∏–Ω',
      image: 'üíâ',
      excerpt: '–í—Å–µ –æ –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏: –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–∏–≤–∏–≤–æ–∫, –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞, –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ –∏ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏—è.',
      tags: ['–≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è', '–∑–¥–æ—Ä–æ–≤—å–µ', '–ø—Ä–∏–≤–∏–≤–∫–∏'],
      views: 2156,
      likes: 156
    },
    {
      id: 3,
      title: '–ü–∏—Ç–∞–Ω–∏–µ –∫–æ—à–µ–∫: —á—Ç–æ –º–æ–∂–Ω–æ –∏ —á—Ç–æ –Ω–µ–ª—å–∑—è',
      category: 'nutrition',
      author: '–î–∏–µ—Ç–æ–ª–æ–≥ –°–∏–¥–æ—Ä–æ–≤–∞',
      date: '2024-02-05',
      readTime: '6 –º–∏–Ω',
      image: 'üê±',
      excerpt: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –∫–æ—à–µ–∫. –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –ø–æ–ª–µ–∑–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏, —Ä–µ–∂–∏–º –∫–æ—Ä–º–ª–µ–Ω–∏—è.',
      tags: ['–ø–∏—Ç–∞–Ω–∏–µ', '–∫–æ—à–∫–∏', '–¥–∏–µ—Ç–∞'],
      views: 1893,
      likes: 134
    },
    {
      id: 4,
      title: '–ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å –ø–∏—Ç–æ–º—Ü—É: —á—Ç–æ –¥–µ–ª–∞—Ç—å –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö',
      category: 'emergency',
      author: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä –ö–æ–∑–ª–æ–≤',
      date: '2024-02-03',
      readTime: '10 –º–∏–Ω',
      image: 'üö®',
      excerpt: '–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å –∂–∏–≤–æ—Ç–Ω—ã–º. –°–∏–º–ø—Ç–æ–º—ã –æ–ø–∞—Å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –∞–ª–≥–æ—Ä–∏—Ç–º –¥–µ–π—Å—Ç–≤–∏–π.',
      tags: ['–ø–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å', '—ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å', '–∑–¥–æ—Ä–æ–≤—å–µ'],
      views: 3421,
      likes: 267
    },
    {
      id: 5,
      title: '–î—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∞ —Å–æ–±–∞–∫: –æ—Å–Ω–æ–≤—ã –∏ —Å–µ–∫—Ä–µ—Ç—ã —É—Å–ø–µ—Ö–∞',
      category: 'training',
      author: '–ö–∏–Ω–æ–ª–æ–≥ –ù–∏–∫–æ–ª–∞–µ–≤–∞',
      date: '2024-02-01',
      readTime: '12 –º–∏–Ω',
      image: 'üéæ',
      excerpt: '–û—Å–Ω–æ–≤—ã –¥—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∏ —Å–æ–±–∞–∫. –ö–æ–º–∞–Ω–¥—ã, –º–µ—Ç–æ–¥—ã –æ–±—É—á–µ–Ω–∏—è, —Ç–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤.',
      tags: ['–¥—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∞', '–æ–±—É—á–µ–Ω–∏–µ', '–∫–æ–º–∞–Ω–¥—ã'],
      views: 1678,
      likes: 98
    },
    {
      id: 6,
      title: '–ì—Ä—É–º–∏–Ω–≥ –≤ –¥–æ–º–∞—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö',
      category: 'grooming',
      author: '–ì—Ä—É–º–µ—Ä –ú–æ—Ä–æ–∑–æ–≤–∞',
      date: '2024-01-28',
      readTime: '7 –º–∏–Ω',
      image: '‚úÇÔ∏è',
      excerpt: '–£—Ö–æ–¥ –∑–∞ —à–µ—Ä—Å—Ç—å—é, —Å—Ç—Ä–∏–∂–∫–∞ –∫–æ–≥—Ç–µ–π, —á–∏—Å—Ç–∫–∞ —É—à–µ–π –∏ –∑—É–±–æ–≤ –≤ –¥–æ–º–∞—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö.',
      tags: ['–≥—Ä—É–º–∏–Ω–≥', '—É—Ö–æ–¥', '–≥–∏–≥–∏–µ–Ω–∞'],
      views: 1456,
      likes: 112
    }
  ];

  const categories = [
    { value: 'all', label: '–í—Å–µ —Å—Ç–∞—Ç—å–∏', icon: 'üìö' },
    { value: 'care', label: '–£—Ö–æ–¥', icon: 'üõÅ' },
    { value: 'health', label: '–ó–¥–æ—Ä–æ–≤—å–µ', icon: 'üè•' },
    { value: 'nutrition', label: '–ü–∏—Ç–∞–Ω–∏–µ', icon: 'üçΩÔ∏è' },
    { value: 'training', label: '–î—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∞', icon: 'üéæ' },
    { value: 'grooming', label: '–ì—Ä—É–º–∏–Ω–≥', icon: '‚úÇÔ∏è' },
    { value: 'emergency', label: '–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å', icon: 'üö®' }
  ];

  useEffect(() => {
    setTimeout(() => {
      setArticles(mockArticles);
      setLoading(false);
    }, 1000);
  }, [mockArticles]);

  const filteredArticles = articles.filter(article => {
    const matchesCategory = selectedCategory === 'all' || article.category === selectedCategory;
    const matchesSearch = article.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         article.excerpt.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         article.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));
    return matchesCategory && matchesSearch;
  });

  const getCategoryIcon = (category) => {
    const cat = categories.find(c => c.value === category);
    return cat ? cat.icon : 'üìÑ';
  };

  const getCategoryLabel = (category) => {
    const cat = categories.find(c => c.value === category);
    return cat ? cat.label : '–°—Ç–∞—Ç—å—è';
  };

  if (loading) {
    return (
      <div className="articles-container">
        <LoadingSpinner />
      </div>
    );
  }

  return (
    <div className="articles-container">
      <div className="articles-header">
        <h1>{t('articles')}</h1>
        <p>–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –æ –∑–¥–æ—Ä–æ–≤—å–µ –∏ —É—Ö–æ–¥–µ –∑–∞ –¥–æ–º–∞—à–Ω–∏–º–∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏</p>
      </div>

      <div className="articles-controls">
        <div className="search-container">
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="search-input"
          />
        </div>
        
        <div className="category-filters">
          {categories.map(category => (
            <button
              key={category.value}
              className={`category-btn ${selectedCategory === category.value ? 'active' : ''}`}
              onClick={() => setSelectedCategory(category.value)}
            >
              {category.icon} {category.label}
            </button>
          ))}
        </div>
      </div>

      <div className="articles-stats">
        <div className="stat-item">
          <span className="stat-number">{articles.length}</span>
          <span className="stat-label">–í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π</span>
        </div>
        <div className="stat-item">
          <span className="stat-number">{filteredArticles.length}</span>
          <span className="stat-label">–ù–∞–π–¥–µ–Ω–æ</span>
        </div>
        <div className="stat-item">
          <span className="stat-number">{Math.round(articles.reduce((sum, article) => sum + article.views, 0) / 1000)}K</span>
          <span className="stat-label">–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</span>
        </div>
      </div>

      <div className="articles-grid">
        {filteredArticles.map(article => (
          <div key={article.id} className="article-card">
            <div className="article-image">
              <span className="article-icon">{article.image}</span>
            </div>
            
            <div className="article-content">
              <div className="article-meta">
                <span className="article-category">
                  {getCategoryIcon(article.category)} {getCategoryLabel(article.category)}
                </span>
                <span className="article-date">
                  üìÖ {new Date(article.date).toLocaleDateString()}
                </span>
              </div>
              
              <h3 className="article-title">{article.title}</h3>
              <p className="article-excerpt">{article.excerpt}</p>
              
              <div className="article-tags">
                {article.tags.map(tag => (
                  <span key={tag} className="tag">#{tag}</span>
                ))}
              </div>
              
              <div className="article-footer">
                <div className="article-author">
                  <span className="author-icon">üë§</span>
                  <span>{article.author}</span>
                </div>
                
                <div className="article-stats">
                  <span className="read-time">‚è±Ô∏è {article.readTime}</span>
                  <span className="views">üëÅÔ∏è {article.views}</span>
                  <span className="likes">‚ù§Ô∏è {article.likes}</span>
                </div>
              </div>
            </div>
            
            <div className="article-actions">
              <button className="action-btn read">
                üìñ –ß–∏—Ç–∞—Ç—å
              </button>
              <button className="action-btn bookmark">
                üîñ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </button>
              <button className="action-btn share">
                üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
              </button>
            </div>
          </div>
        ))}
      </div>

      {filteredArticles.length === 0 && (
        <div className="no-articles">
          <p>–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          <button 
            className="reset-filters-btn"
            onClick={() => {
              setSearchQuery('');
              setSelectedCategory('all');
            }}
          >
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </button>
        </div>
      )}
    </div>
  );
};

export default Articles; 