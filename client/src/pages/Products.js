import React, { useState, useEffect } from 'react';
import { useLanguage } from '../context/LanguageContext';
import LoadingSpinner from '../components/LoadingSpinner';
import './Products.css';

const Products = () => {
  const { t } = useLanguage();
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedPartner, setSelectedPartner] = useState('all');

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥
  const mockProducts = [
    {
      id: 1,
      name: '–ü—Ä–µ–º–∏—É–º –∫–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫',
      type: 'product',
      category: 'food',
      partner: '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω "–ü–∏—Ç–æ–º–µ—Ü"',
      price: 2500,
      currency: '—Å–æ–º',
      description: '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫ –≤—Å–µ—Ö –ø–æ—Ä–æ–¥. –°–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–∏—Ç–∞–º–∏–Ω—ã –∏ –º–∏–Ω–µ—Ä–∞–ª—ã.',
      image: 'ü¶¥',
      rating: 4.8,
      reviews: 156,
      inStock: true,
      discount: 10
    },
    {
      id: 2,
      name: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –æ—Å–º–æ—Ç—Ä',
      type: 'service',
      category: 'health',
      partner: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ "–î–æ–±—Ä—ã–π –¥–æ–∫—Ç–æ—Ä"',
      price: 1500,
      currency: '—Å–æ–º',
      description: '–ü–æ–ª–Ω—ã–π –æ—Å–º–æ—Ç—Ä –ø–∏—Ç–æ–º—Ü–∞ —Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞. –í–∫–ª—é—á–∞–µ—Ç –∏–∑–º–µ—Ä–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã, –æ—Å–º–æ—Ç—Ä —É—à–µ–π, –≥–ª–∞–∑, –∑—É–±–æ–≤.',
      image: 'üè•',
      rating: 4.9,
      reviews: 234,
      inStock: true
    },
    {
      id: 3,
      name: '–ò–≥—Ä—É—à–∫–∞ –¥–ª—è –∫–æ—à–µ–∫ "–ú—ã—à–∫–∞"',
      type: 'product',
      category: 'toys',
      partner: '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω "–î—Ä—É–∂–æ–∫"',
      price: 450,
      currency: '—Å–æ–º',
      description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä—É—à–∫–∞ –¥–ª—è –∫–æ—à–µ–∫ —Å –ø–∏—â–∞–ª–∫–æ–π. –†–∞–∑–≤–∏–≤–∞–µ—Ç –æ—Ö–æ—Ç–Ω–∏—á—å–∏ –∏–Ω—Å—Ç–∏–Ω–∫—Ç—ã.',
      image: 'üê≠',
      rating: 4.6,
      reviews: 89,
      inStock: true
    },
    {
      id: 4,
      name: '–ì—Ä—É–º–∏–Ω–≥ —Å–æ–±–∞–∫',
      type: 'service',
      category: 'grooming',
      partner: '–ì—Ä—É–º–∏–Ω–≥-—Å–∞–ª–æ–Ω "–ö—Ä–∞—Å–∞–≤—á–∏–∫"',
      price: 3000,
      currency: '—Å–æ–º',
      description: '–ü–æ–ª–Ω—ã–π –≥—Ä—É–º–∏–Ω–≥: –º—ã—Ç—å–µ, —Å—Ç—Ä–∏–∂–∫–∞, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–≥—Ç–µ–π, —á–∏—Å—Ç–∫–∞ —É—à–µ–π. –î–ª—è —Å–æ–±–∞–∫ –≤—Å–µ—Ö –ø–æ—Ä–æ–¥.',
      image: '‚úÇÔ∏è',
      rating: 4.7,
      reviews: 178,
      inStock: true
    },
    {
      id: 5,
      name: '–í–∏—Ç–∞–º–∏–Ω—ã –¥–ª—è –∫–æ—à–µ–∫',
      type: 'product',
      category: 'vitamins',
      partner: '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω "–ü–∏—Ç–æ–º–µ—Ü"',
      price: 1200,
      currency: '—Å–æ–º',
      description: '–ö–æ–º–ø–ª–µ–∫—Å –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –∫–æ—à–µ–∫. –£–∫—Ä–µ–ø–ª—è–µ—Ç –∏–º–º—É–Ω–∏—Ç–µ—Ç –∏ —à–µ—Ä—Å—Ç—å.',
      image: 'üíä',
      rating: 4.5,
      reviews: 67,
      inStock: true,
      discount: 15
    },
    {
      id: 6,
      name: '–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –æ—Ç –±–µ—à–µ–Ω—Å—Ç–≤–∞',
      type: 'service',
      category: 'health',
      partner: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ "–ê–π–±–æ–ª–∏—Ç"',
      price: 800,
      currency: '—Å–æ–º',
      description: '–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –æ—Ç –±–µ—à–µ–Ω—Å—Ç–≤–∞ —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–∞—Å–ø–æ—Ä—Ç–∞.',
      image: 'üíâ',
      rating: 4.8,
      reviews: 312,
      inStock: true
    },
    {
      id: 7,
      name: '–õ–µ–∂–∞–Ω–∫–∞ –¥–ª—è –ø–∏—Ç–æ–º—Ü–∞',
      type: 'product',
      category: 'accessories',
      partner: '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω "–î—Ä—É–∂–æ–∫"',
      price: 3500,
      currency: '—Å–æ–º',
      description: '–ú—è–≥–∫–∞—è –ª–µ–∂–∞–Ω–∫–∞ –¥–ª—è —Å–æ–±–∞–∫ –∏ –∫–æ—à–µ–∫. –û—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–∞—è –æ—Å–Ω–æ–≤–∞, —Å—ä–µ–º–Ω—ã–π —á–µ—Ö–æ–ª.',
      image: 'üõèÔ∏è',
      rating: 4.4,
      reviews: 45,
      inStock: false
    },
    {
      id: 8,
      name: '–î—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∞ —Å–æ–±–∞–∫',
      type: 'service',
      category: 'training',
      partner: '–ö–∏–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä "–£–º–Ω–∞—è —Å–æ–±–∞–∫–∞"',
      price: 5000,
      currency: '—Å–æ–º',
      description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –ø–æ –¥—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–µ. –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏—è.',
      image: 'üéæ',
      rating: 4.9,
      reviews: 98,
      inStock: true
    }
  ];

  const categories = [
    { value: 'all', label: '–í—Å–µ —Ç–æ–≤–∞—Ä—ã', icon: 'üõçÔ∏è' },
    { value: 'food', label: '–ö–æ—Ä–º–∞', icon: 'ü¶¥' },
    { value: 'toys', label: '–ò–≥—Ä—É—à–∫–∏', icon: 'üéæ' },
    { value: 'accessories', label: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', icon: 'ü¶Æ' },
    { value: 'vitamins', label: '–í–∏—Ç–∞–º–∏–Ω—ã', icon: 'üíä' },
    { value: 'health', label: '–ó–¥–æ—Ä–æ–≤—å–µ', icon: 'üè•' },
    { value: 'grooming', label: '–ì—Ä—É–º–∏–Ω–≥', icon: '‚úÇÔ∏è' },
    { value: 'training', label: '–î—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∞', icon: 'üéì' }
  ];

  const partners = [
    { value: 'all', label: '–í—Å–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã' },
    { value: '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω "–ü–∏—Ç–æ–º–µ—Ü"', label: '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω "–ü–∏—Ç–æ–º–µ—Ü"' },
    { value: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ "–î–æ–±—Ä—ã–π –¥–æ–∫—Ç–æ—Ä"', label: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ "–î–æ–±—Ä—ã–π –¥–æ–∫—Ç–æ—Ä"' },
    { value: '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω "–î—Ä—É–∂–æ–∫"', label: '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω "–î—Ä—É–∂–æ–∫"' },
    { value: '–ì—Ä—É–º–∏–Ω–≥-—Å–∞–ª–æ–Ω "–ö—Ä–∞—Å–∞–≤—á–∏–∫"', label: '–ì—Ä—É–º–∏–Ω–≥-—Å–∞–ª–æ–Ω "–ö—Ä–∞—Å–∞–≤—á–∏–∫"' },
    { value: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ "–ê–π–±–æ–ª–∏—Ç"', label: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ "–ê–π–±–æ–ª–∏—Ç"' },
    { value: '–ö–∏–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä "–£–º–Ω–∞—è —Å–æ–±–∞–∫–∞"', label: '–ö–∏–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä "–£–º–Ω–∞—è —Å–æ–±–∞–∫–∞"' }
  ];

  useEffect(() => {
    setTimeout(() => {
      setProducts(mockProducts);
      setLoading(false);
    }, 1000);
  }, [mockProducts]);

  const filteredProducts = products.filter(product => {
    const matchesCategory = selectedCategory === 'all' || product.category === selectedCategory;
    const matchesPartner = selectedPartner === 'all' || product.partner === selectedPartner;
    const matchesSearch = product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         product.description.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesPartner && matchesSearch;
  });

  const getCategoryIcon = (category) => {
    const cat = categories.find(c => c.value === category);
    return cat ? cat.icon : 'üì¶';
  };

  const getCategoryLabel = (category) => {
    const cat = categories.find(c => c.value === category);
    return cat ? cat.label : '–¢–æ–≤–∞—Ä';
  };

  const formatPrice = (price, currency) => {
    return `${price.toLocaleString()} ${currency}`;
  };

  const getDiscountedPrice = (price, discount) => {
    return price * (1 - discount / 100);
  };

  if (loading) {
    return (
      <LoadingSpinner />
    );
  }

  return (
    <div className="products-container">
      <div className="products-header">
        <h1>{t('products')}</h1>
        <p>–¢–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤</p>
      </div>

      <div className="products-controls">
        <div className="search-container">
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="search-input"
          />
        </div>
        
        <div className="filters-row">
          <div className="category-filters">
            {categories.map(category => (
              <button
                key={category.value}
                className={`filter-btn ${selectedCategory === category.value ? 'active' : ''}`}
                onClick={() => setSelectedCategory(category.value)}
              >
                {category.icon} {category.label}
              </button>
            ))}
          </div>
          
          <div className="partner-filter">
            <select
              value={selectedPartner}
              onChange={(e) => setSelectedPartner(e.target.value)}
              className="partner-select"
            >
              {partners.map(partner => (
                <option key={partner.value} value={partner.value}>
                  {partner.label}
                </option>
              ))}
            </select>
          </div>
        </div>
      </div>

      <div className="products-stats">
        <div className="stat-item">
          <span className="stat-number">{products.length}</span>
          <span className="stat-label">–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</span>
        </div>
        <div className="stat-item">
          <span className="stat-number">{products.filter(p => p.type === 'product').length}</span>
          <span className="stat-label">–¢–æ–≤–∞—Ä—ã</span>
        </div>
        <div className="stat-item">
          <span className="stat-number">{products.filter(p => p.type === 'service').length}</span>
          <span className="stat-label">–£—Å–ª—É–≥–∏</span>
        </div>
        <div className="stat-item">
          <span className="stat-number">{products.filter(p => p.inStock).length}</span>
          <span className="stat-label">–í –Ω–∞–ª–∏—á–∏–∏</span>
        </div>
      </div>

      <div className="products-grid">
        {filteredProducts.map(product => (
          <div key={product.id} className="product-card">
            <div className="product-image">
              <span className="product-icon">{product.image}</span>
              {product.discount && (
                <div className="discount-badge">
                  -{product.discount}%
                </div>
              )}
              {!product.inStock && (
                <div className="out-of-stock-badge">
                  –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏
                </div>
              )}
            </div>
            
            <div className="product-content">
              <div className="product-meta">
                <span className="product-type">
                  {product.type === 'product' ? 'üõçÔ∏è –¢–æ–≤–∞—Ä' : 'üîß –£—Å–ª—É–≥–∞'}
                </span>
                <span className="product-category">
                  {getCategoryIcon(product.category)} {getCategoryLabel(product.category)}
                </span>
              </div>
              
              <h3 className="product-title">{product.name}</h3>
              <p className="product-description">{product.description}</p>
              
              <div className="product-partner">
                <span className="partner-icon">üè¢</span>
                <span>{product.partner}</span>
              </div>
              
              <div className="product-rating">
                <span className="stars">{'‚≠ê'.repeat(Math.floor(product.rating))}</span>
                <span className="rating-text">{product.rating} ({product.reviews} –æ—Ç–∑—ã–≤–æ–≤)</span>
              </div>
              
              <div className="product-price">
                {product.discount ? (
                  <div className="price-with-discount">
                    <span className="original-price">{formatPrice(product.price, product.currency)}</span>
                    <span className="discounted-price">
                      {formatPrice(getDiscountedPrice(product.price, product.discount), product.currency)}
                    </span>
                  </div>
                ) : (
                  <span className="price">{formatPrice(product.price, product.currency)}</span>
                )}
              </div>
            </div>
            
            <div className="product-actions">
              <button className="action-btn primary" disabled={!product.inStock}>
                {product.type === 'product' ? 'üõí –ö—É–ø–∏—Ç—å' : 'üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è'}
              </button>
              <button className="action-btn secondary">
                üí¨ –°–≤—è–∑–∞—Ç—å—Å—è
              </button>
              <button className="action-btn secondary">
                üìç –ê–¥—Ä–µ—Å
              </button>
            </div>
          </div>
        ))}
      </div>

      {filteredProducts.length === 0 && (
        <div className="no-products">
          <p>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          <button 
            className="reset-filters-btn"
            onClick={() => {
              setSearchQuery('');
              setSelectedCategory('all');
              setSelectedPartner('all');
            }}
          >
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </button>
        </div>
      )}
    </div>
  );
};

export default Products; 